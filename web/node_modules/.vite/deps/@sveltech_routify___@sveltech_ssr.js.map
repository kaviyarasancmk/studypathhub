{
  "version": 3,
  "sources": ["../../@sveltech/ssr/ssr.js"],
  "sourcesContent": ["const { JSDOM } = require('jsdom')\r\nconst fs = require('fs')\r\nconst fetch = require('node-fetch')\r\n\r\nconst defaults = {\r\n    host: 'http://jsdom.ssr',\r\n    eventName: 'app-loaded',\r\n    beforeEval() { },\r\n    afterEval() { },\r\n    meta: { 'data-render': 'ssr' }\r\n}\r\n\r\n/**\r\n * Called before the app script is evaluated\r\n * @async\r\n * @name beforeEval\r\n * @function\r\n * @param {object} dom The DOM object\r\n*/\r\n\r\n/**\r\n * Called after the app script is evaluated\r\n * @name afterEval\r\n * @function\r\n * @param {object} dom The DOM object\r\n*/\r\n\r\n/**\r\n * Renders an HTML page from a HTML template, an app bundle and a path\r\n *\r\n * @async\r\n * @param {string} template Html template (or path to a HTML template).\r\n * @param {string} script Bundled JS app (or path to bundled bundle JS app).\r\n * @param {string} url Path to render. Ie. /blog/breathing-oxygen-linked-to-staying-alive\r\n * @param {object=} options Options\r\n * @param {string=} options.host hostname to use while rendering. Defaults to http://jsdom.ssr\r\n * @param {string=} options.eventName event to wait for before rendering app. Defaults to 'app-loaded'\r\n * @param {domFn=} options.beforeEval Executed before script is evaluated.\r\n * @param {domFn=} options.afterEval Executed after script is evaluated.\r\n * @param {object=} options.meta Metadata to be applied to the HTML element. Defaults to { 'data-render': 'ssr' }\r\n * @returns {string}\r\n */\r\nmodule.exports.ssr = async function ssr(template, script, url, options) {\r\n    const start = Date.now()\r\n    const { host, eventName, beforeEval, afterEval, meta } = { ...defaults, ...options }\r\n\r\n    // is this the file or the path to the file?\r\n    template = fs.existsSync(template) ? fs.readFileSync(template, 'utf8') : template\r\n    script = fs.existsSync(script) ? fs.readFileSync(script, 'utf8') : script\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const dom = await new JSDOM(template, { runScripts: \"outside-only\", url: host + url })\r\n            dom.window.rendering = true;\r\n            dom.window.alert = (_msg) => { };\r\n            dom.window.scrollTo = () => { }\r\n            dom.window.requestAnimationFrame = () => { }\r\n            dom.window.cancelAnimationFrame = () => { }\r\n            dom.window.fetch = fetch\r\n            dom.window.addEventListener(eventName, async () => {\r\n                afterEval(dom)\r\n                const html = dom.serialize()\r\n                resolve(html)\r\n                dom.window.close()\r\n                console.log(`${url} - ${Date.now() - start}ms`)\r\n            })\r\n            await beforeEval(dom)\r\n            if (meta) setMeta(dom, meta)\r\n            dom.window.eval(script)\r\n        } catch (err) { handleError(err, url) }\r\n    })\r\n}\r\n\r\nfunction setMeta(dom, meta) {\r\n    const metaElem = dom.window.document.createElement('meta')\r\n    Object.entries(meta).forEach(([key, value]) => {\r\n        metaElem.setAttribute(key, value)\r\n    })\r\n    dom.window.document.getElementsByTagName('head')[0].appendChild(metaElem)\r\n}\r\n\r\nfunction handleError(err, url) {\r\n    console.log('url:', url)\r\n    throw Error(err)\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,QAAM,EAAE,MAAM,IAAI;AAClB,QAAM,KAAK;AACX,QAAM,QAAQ;AAEd,QAAM,WAAW;AAAA,MACb,MAAM;AAAA,MACN,WAAW;AAAA,MACX,aAAa;AAAA,MAAE;AAAA,MACf,YAAY;AAAA,MAAE;AAAA,MACd,MAAM,EAAE,eAAe,MAAM;AAAA,IACjC;AAgCA,WAAO,QAAQ,MAAM,eAAe,IAAI,UAAU,QAAQ,KAAK,SAAS;AACpE,YAAM,QAAQ,KAAK,IAAI;AACvB,YAAM,EAAE,MAAM,WAAW,YAAY,WAAW,KAAK,IAAI,EAAE,GAAG,UAAU,GAAG,QAAQ;AAGnF,iBAAW,GAAG,WAAW,QAAQ,IAAI,GAAG,aAAa,UAAU,MAAM,IAAI;AACzE,eAAS,GAAG,WAAW,MAAM,IAAI,GAAG,aAAa,QAAQ,MAAM,IAAI;AAEnE,aAAO,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC1C,YAAI;AACA,gBAAM,MAAM,MAAM,IAAI,MAAM,UAAU,EAAE,YAAY,gBAAgB,KAAK,OAAO,IAAI,CAAC;AACrF,cAAI,OAAO,YAAY;AACvB,cAAI,OAAO,QAAQ,CAAC,SAAS;AAAA,UAAE;AAC/B,cAAI,OAAO,WAAW,MAAM;AAAA,UAAE;AAC9B,cAAI,OAAO,wBAAwB,MAAM;AAAA,UAAE;AAC3C,cAAI,OAAO,uBAAuB,MAAM;AAAA,UAAE;AAC1C,cAAI,OAAO,QAAQ;AACnB,cAAI,OAAO,iBAAiB,WAAW,YAAY;AAC/C,sBAAU,GAAG;AACb,kBAAM,OAAO,IAAI,UAAU;AAC3B,oBAAQ,IAAI;AACZ,gBAAI,OAAO,MAAM;AACjB,oBAAQ,IAAI,GAAG,SAAS,KAAK,IAAI,IAAI,SAAS;AAAA,UAClD,CAAC;AACD,gBAAM,WAAW,GAAG;AACpB,cAAI;AAAM,oBAAQ,KAAK,IAAI;AAC3B,cAAI,OAAO,KAAK,MAAM;AAAA,QAC1B,SAAS,KAAP;AAAc,sBAAY,KAAK,GAAG;AAAA,QAAE;AAAA,MAC1C,CAAC;AAAA,IACL;AAEA,aAAS,QAAQ,KAAK,MAAM;AACxB,YAAM,WAAW,IAAI,OAAO,SAAS,cAAc,MAAM;AACzD,aAAO,QAAQ,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC3C,iBAAS,aAAa,KAAK,KAAK;AAAA,MACpC,CAAC;AACD,UAAI,OAAO,SAAS,qBAAqB,MAAM,EAAE,GAAG,YAAY,QAAQ;AAAA,IAC5E;AAEA,aAAS,YAAY,KAAK,KAAK;AAC3B,cAAQ,IAAI,QAAQ,GAAG;AACvB,YAAM,MAAM,GAAG;AAAA,IACnB;AAAA;AAAA;",
  "names": []
}
