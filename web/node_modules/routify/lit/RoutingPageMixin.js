import { registerRoute, unregisterRoute, locationMatch, getPagePathFromEl } from '../routify'


export const RoutingPageMixin = (base) => {
  return class Base extends base {
    connectedCallback () {
      super.connectedCallback()
      registerRoute(this)
    }

    disconnectedCallback () {
      super.disconnectedCallback()
      unregisterRoute(this)
    }

    locationMatch () {
      const allowPartialMatch = this.allowPartialUrlMatch
      const checker = this.urlChecker
      const ignoreHashes = this.ignoreUrlHashes
      return locationMatch(getPagePathFromEl(this), { checker, allowPartialMatch, ignoreHashes })
    }

    async preRouterCallback (params) {
      await this.updateComplete
    }

    shouldUpdate () {
      return this.active
    }

    static get properties () {
      return {
        active: { type: Boolean },
        allowPartialUrlMatch: { type: Boolean, attribute: 'allow-partial-url-match' },
        ignoreUrlHashes: { type: Boolean, attribute: 'ignore-url-hashes' },
        urlChecker: { type: Function, attribute: 'url-checker' }
      }
    }

  
  }
}
